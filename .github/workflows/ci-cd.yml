name: CI/CD - Publish Package to GitHub Packages

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Clean Poetry Configuration (Remove Old npm URL)
        run: |
          poetry config --unset repositories.github || true
          poetry config --unset repositories.pypi || true
          poetry config --unset http-basic.github || true
          rm ~/.config/pypoetry/auth.toml || true
          rm ~/.config/pypoetry/config.toml || true

      - name: Configure Poetry for GitHub Packages (Python Endpoint)
        run: |
          poetry config repositories.github "https://upload.pypi.pkg.github.com/${{ github.repository_owner }}"
          poetry config http-basic.github __token__ "${{ secrets.GH_TOKEN }}"
          poetry config --list

      - name: Install dependencies
        run: poetry install --with dev

      - name: Publish package for PRs (dev version)
        if: github.event_name == 'pull_request'
        run: |
          CURRENT_VERSION=$(poetry version --short || echo "0.1.0")
          DEV_VERSION="${CURRENT_VERSION}.dev${{ github.event.number }}+${{ github.run_number }}"
          echo "Setting dynamic PR version: ${DEV_VERSION}"
          poetry version "$DEV_VERSION"
          poetry publish --build --repository github -vvv

      - name: Publish package on merge (stable version)
        if: github.event_name == 'push'
        run: |
          STABLE_VERSION=$(poetry version --short)
          echo "Releasing stable version: $STABLE_VERSION"
          poetry version "$STABLE_VERSION"
          poetry publish --build --repository github -vvv
