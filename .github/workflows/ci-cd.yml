name: CI/CD - Publish Package to GitHub Packages

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Install dependencies
        run: poetry install --with dev

      - name: Clean previous repository configuration
        run: |
          # Remove any old configuration that might be pointing to npm.pkg.github.com
          poetry config --unset repositories.github || true

      - name: Configure Poetry for GitHub Packages
        run: |
          # Configure with the correct GitHub Packages endpoint for Python
          poetry config repositories.github "https://upload.pypi.pkg.github.com/${{ github.repository_owner }}"
          poetry config http-basic.github __token__ "${{ secrets.GH_TOKEN }}"
          # (Optional) Verify the configuration
          poetry config --list

      - name: Test connectivity
        run: curl -k -I "https://upload.pypi.pkg.github.com/${{ github.repository_owner }}"

      - name: Publish package for PRs (dev version)
        if: github.event_name == 'pull_request'
        run: |
          CURRENT_VERSION=$(poetry version --short || echo "0.1.0")
          DEV_VERSION="${CURRENT_VERSION}.dev${{ github.event.number }}+${{ github.run_number }}"
          echo "Setting dynamic PR version: ${DEV_VERSION}"
          poetry version "$DEV_VERSION"
          poetry publish --build --repository github -vvv

      - name: Publish package on merge (stable version)
        if: github.event_name == 'push'
        run: |
          STABLE_VERSION=$(poetry version --short)
          echo "Releasing stable version: $STABLE_VERSION"
          poetry version "$STABLE_VERSION"
          poetry publish --build --repository github -vvv

      - name: Create GitHub Release
        if: github.event_name == 'push'
        run: |
          TAG_NAME="v$(poetry version --short)"
          echo "Creating GitHub Release: $TAG_NAME"
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"tag_name\": \"${TAG_NAME}\", \"target_commitish\": \"main\", \"name\": \"Release ${TAG_NAME}\", \"body\": \"Release for version ${TAG_NAME}\", \"draft\": false, \"prerelease\": false}" \
            "https://api.github.com/repos/${{ github.repository }}/releases"
