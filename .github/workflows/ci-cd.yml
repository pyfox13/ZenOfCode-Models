name: CI/CD - Publish Package to GitHub Packages

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Clean Poetry Configuration (Remove old settings)
        run: |
          poetry config --unset repositories.github || true
          poetry config --unset repositories.pypi || true
          poetry config --unset http-basic.github || true
          rm ~/.config/pypoetry/auth.toml || true
          rm ~/.config/pypoetry/config.toml || true

      - name: Update CA Certificates
        run: sudo update-ca-certificates

      - name: Install Dependencies
        run: poetry install --with dev

      - name: Build Package
        run: poetry build

      - name: Publish package for PRs (dev version) using Twine
        if: github.event_name == 'pull_request'
        run: |
          CURRENT_VERSION=$(poetry version --short || echo "0.1.0")
          DEV_VERSION="${CURRENT_VERSION}.dev${{ github.event.number }}+${{ github.run_number }}"
          echo "Setting dynamic PR version: ${DEV_VERSION}"
          poetry version "$DEV_VERSION"
          # Rebuild package to update version info
          poetry build
          pip install twine
          # Use the correct upload endpoint:
          twine upload --repository-url "https://upload.pypi.pkg.github.com/pyfox13" -u __token__ -p "${{ secrets.GH_TOKEN }}" dist/*
          # Uncomment the following line to disable SSL verification (not recommended for production)
          # TWINE_DISABLE_SSL_VERIFICATION=1 twine upload --repository-url "https://upload.pypi.pkg.github.com/pyfox13" -u __token__ -p "${{ secrets.GH_TOKEN }}" dist/*

      - name: Publish package on merge (stable version) using Twine
        if: github.event_name == 'push'
        run: |
          STABLE_VERSION=$(poetry version --short)
          echo "Releasing stable version: $STABLE_VERSION"
          poetry version "$STABLE_VERSION"
          # Rebuild package to update version info if needed
          poetry build
          pip install twine
          twine upload --repository-url "https://upload.pypi.pkg.github.com/pyfox13" -u __token__ -p "${{ secrets.GH_TOKEN }}" dist/*
          # If needed, use:
          # TWINE_DISABLE_SSL_VERIFICATION=1 twine upload --repository-url "https://upload.pypi.pkg.github.com/pyfox13" -u __token__ -p "${{ secrets.GH_TOKEN }}" dist/*
