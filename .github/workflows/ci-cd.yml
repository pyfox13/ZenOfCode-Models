name: CI/CD - Publish Package

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Configure Poetry for GitHub Packages (Using 'GH_TOKEN')
        run: |
          poetry config repositories.github "https://npm.pkg.github.com/${{ github.repository_owner }}"
          poetry config pypi-token.github "${{ secrets.GH_TOKEN }}"

      - name: Generate and publish dynamic version for PR
        if: success()
        run: |
          VERSION=$(poetry version --short || echo "0.1.0")
          echo "Current base version: $VERSION"
          NEW_VERSION="${VERSION}.dev${{ github.event.pull_request.number }}+${{ github.run_number }}"
          echo "Setting dynamic PR version: ${NEW_VERSION}"
          poetry version "$NEW_VERSION"
          poetry publish --build --repository github

      - name: Publish stable version on merge
        if: github.event.pull_request.merged == true && success()
        run: |
          STABLE_VERSION=$(poetry version --short)
          echo "Releasing stable version: $STABLE_VERSION"
          poetry version "$STABLE_VERSION"
          poetry publish --build --repository github

      - name: Create GitHub Release
        if: github.event.pull_request.merged == true && success()
        run: |
          TAG_NAME="v$(poetry version --short)"
          echo "Creating GitHub Release: $TAG_NAME"
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"tag_name": "'$TAG_NAME'", "target_commitish": "main", "name": "Release '$TAG_NAME'", "body": "Release for version '$TAG_NAME'", "draft": false, "prerelease": false}' \
            "https://api.github.com/repos/${{ github.repository }}/releases"
